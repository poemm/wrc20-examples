  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: '0x020000'
    currentGasLimit: '89128960'
    currentNumber: '1'
    currentTimestamp: '1000'
    previousHash: 5e20a0453cecd065ea59c37ac63e079ee08998b6045136a8ce6635c7912ec0b6
  pre:
    0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '100000000000'
      code: ''
      nonce: '0'
      storage: {}
    0xeD09375DC6B20050d242d1611af97eE4A6E93CAd:
      balance: '100000000000'
      code: |
        (module
         (import "ethereum" "storageStore" (func $storageStore (param i32 i32)))
         (import "ethereum" "call"         (func $call (param i64 i32 i32 i32 i32) (result i32)))
         (import "ethereum" "returnDataCopy" (func $returnDataCopy (param i32 i32 i32)))
         (import "debug" "printStorageHex" (func $printStorageHex (param i32)))
         (import "debug" "printMemHex" (func $printMemHex (param i32 i32)))
         (memory 1)

         ;; memory looks like this
         ;; 0                   | 32          | 64                                  | 96...
         ;; address of contract | wei to send | storage key to store returned value | calldata and returndata...

         ;; address of contract to call
         (data (i32.const 0) "\b9\4f\53\74\fc\e5\ed\bc\8e\2a\86\97\c1\53\31\67\7e\6e\bf\0b")

         ;; first message to query balance
         (data (i32.const 96) "\99\93\02\1a\ed\09\37\5d\c6\b2\00\50\d2\42\d1\61\1a\f9\7e\e4\a6\e9\3c\ad")	
         ;; first return value will become
         ;;(data (i32.const 120) "\00\00\00\00\00\0f\42\40")	

         ;; second message to transfer tokens
         (data (i32.const 152) "\5d\35\9f\bd\e9\29\cf\25\44\36\3b\dc\ee\4a\97\65\15\d5\f9\77\58\ef\47\6c\00\00\00\00\00\07\a1\20")	    ;; second message returns nothing

         ;; third message (same as first)
         (data (i32.const 216) "\99\93\02\1a\ed\09\37\5d\c6\b2\00\50\d2\42\d1\61\1a\f9\7e\e4\a6\e9\3c\ad")	
         ;; third return value will become
         ;;(data (i32.const 240) "\00\00\00\00\00\07\a1\20")	

         ;; fourth message to query balance
         (data (i32.const 272) "\99\93\02\1a\e9\29\cf\25\44\36\3b\dc\ee\4a\97\65\15\d5\f9\77\58\ef\47\6c")
         ;; fourth return value will become
         ;;(data (i32.const 304) "\00\00\00\00\00\07\a1\20")	

         (export "main" (func $main))
         (export "memory" (memory 0))
         (func $main


          ;; call the precompile at address b94...f0b and send value 0 Eth
          ;;                      gas           addrOffset     valOffset      dataOffset     dataLength
          (drop (call $call (i64.const 200000) (i32.const 0) (i32.const 32) (i32.const 96) (i32.const 24)))
          ;; get return data
          ;;                     resultOffset   dataOffset    length
          (call $returnDataCopy (i32.const 120) (i32.const 0) (i32.const 8))
          ;; store result in storage
          (i32.store8 (i32.const 95) (i32.const 0))
          ;;                     pathOffset     valueOffset
          (call $storageStore (i32.const 64) (i32.const 120))
          (call $printMemHex (i32.const 120) (i32.const 32))
          (call $printStorageHex (i32.const 64))

          ;; call the precompile at address b94...f0b and send value 0 Eth
          ;;                      gas           addrOffset     valOffset      dataOffset     dataLength
          (drop (call $call (i64.const 200000) (i32.const 0) (i32.const 32) (i32.const 152) (i32.const 32)))
          ;; get return data
          ;;                     resultOffset   dataOffset    length
          (call $returnDataCopy (i32.const 184) (i32.const 0) (i32.const 0))
          ;; store result in storage
          (i32.store8 (i32.const 95) (i32.const 1))
          ;;                     pathOffset     valueOffset
          (call $storageStore (i32.const 64) (i32.const 184))
          (call $printMemHex (i32.const 184) (i32.const 32))
          (call $printStorageHex (i32.const 64))


          ;; call the precompile at address b94...f0b and send value 0 Eth
          ;;                      gas           addrOffset     valOffset      dataOffset     dataLength
          (drop (call $call (i64.const 200000) (i32.const 0) (i32.const 32) (i32.const 216) (i32.const 24)))
          ;; get return data
          ;;                     resultOffset   dataOffset    length
          (call $returnDataCopy (i32.const 240) (i32.const 0) (i32.const 8))
          ;; store result in storage
          (i32.store8 (i32.const 95) (i32.const 2))
          ;;                     pathOffset     valueOffset
          (call $storageStore (i32.const 64) (i32.const 240))
          (call $printMemHex (i32.const 240) (i32.const 32))
          (call $printStorageHex (i32.const 64))


          ;; call the precompile at address b94...f0b and send value 0 Eth
          ;;                      gas           addrOffset     valOffset      dataOffset     dataLength
          (drop (call $call (i64.const 200000) (i32.const 0) (i32.const 32) (i32.const 272) (i32.const 24)))
          ;; get return data
          ;;                     resultOffset   dataOffset    length
          (call $returnDataCopy (i32.const 304) (i32.const 0) (i32.const 8))
          ;; store result in storage
          (i32.store8 (i32.const 95) (i32.const 3))
          ;;                     pathOffset     valueOffset
          (call $storageStore (i32.const 64) (i32.const 304))
          (call $printMemHex (i32.const 304) (i32.const 32))
          (call $printStorageHex (i32.const 64))

         )
        )
      nonce: '0'
      storage: {}

    b94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '100000000000'
      code: |
